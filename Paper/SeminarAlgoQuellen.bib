@book{eades1991preserving,
  title={Preserving the mental map of a diagram},
  author={Eades, Peter and Lai, Wei and Misue, Kazuo and Sugiyama, Kozo},
  year={1991},
  publisher={International Institute for Advanced Study of Social Information Science, Fujitsu Limited}
  link={http://www.cs.tsukuba.ac.jp/~misue/publications/techreport/iias-rr-91-16e.pdf}
}
@article{Lai2002105,
title = "Removing edge-node intersections in drawings of graphs ",
journal = "Information Processing Letters ",
volume = "81",
number = "2",
pages = "105 - 110",
year = "2002",
note = "",
issn = "0020-0190",
doi = "http://dx.doi.org/10.1016/S0020-0190(01)00194-6",
url = "http://www.sciencedirect.com/science/article/pii/S0020019001001946",
author = "Wei Lai and Peter Eades",
keywords = "Algorithms",
keywords = "Graph layout",
keywords = "Overlapping nodes",
keywords = "Node-edge intersections",
keywords = "Layout adjustment "
}

@article{Misue1995183,
title = "Layout Adjustment and the Mental Map ",
journal = "Journal of Visual Languages & Computing ",
volume = "6",
number = "2",
pages = "183 - 210",
year = "1995",
note = "",
issn = "1045-926X",
doi = "http://dx.doi.org/10.1006/jvlc.1995.1010",
url = "http://www.sciencedirect.com/science/article/pii/S1045926X85710105",
author = "Kazuo Misue and Peter Eades and Wei Lai and Kozo Sugiyama",
abstract = "Many models in software and information engineering use graph representations; examples are data flow diagrams, state transition diagrams, flow charts, \{PERT\} charts, organization charts, Petri nets and entity-relationship diagrams. The usefulness of these graph representations depends on the quality of the layout of the graphs. Automatic graph layout, which can release humans from graph drawing, is now available in several visualization systems. Most automatic layout facilities take a purely combinatorial description of a graph and produce a layout of the graph; these methods are called 'layout creation' methods. For interactive systems, another kind of layout is needed: a facility which can adjust a layout after a change is made by the user or by the application. Although layout adjustment is essential in interactive systems, most existing layout algorithms are designed for layout creation. The use of a layout creation method for layout adjustment may totally rearrange the layout and thus destroy the user's 'mental map' of the diagram; thus a set of layout adjustment methods, separate from layout creation methods, is needed. This paper discusses some layout adjustment methods and the preservation of the 'mental map' of the diagram. First, several models are proposed to make the concept of 'mental map' more precise. Then two kinds of layout adjustments are described. One is an algorithm for rearranging a diagram to avoid overlapping nodes, and the other is a method aimed at changing the focus of interest of the user without destroying the mental map. Next, some experience with visualization systems in which the techniques have been employed is also described. "
}

@article{Huang20072821,
title = "A new algorithm for removing node overlapping in graph visualization ",
journal = "Information Sciences ",
volume = "177",
number = "14",
pages = "2821 - 2844",
year = "2007",
note = "",
issn = "0020-0255",
doi = "http://dx.doi.org/10.1016/j.ins.2007.02.016",
url = "http://www.sciencedirect.com/science/article/pii/S0020025507000989",
author = "Xiaodi Huang and Wei Lai and A.S.M. Sajeev and Junbin Gao",
keywords = "Graph layout",
keywords = "Overlapping nodes",
keywords = "Force transfer",
keywords = "Layout adjustment ",
abstract = "Techniques for drawing graphs have proven successful in producing good layouts of undirected graphs. When nodes must be labeled however, the problem of overlapping nodes arises, particularly in dynamic graph visualization. Providing a formal description of this problem, this paper presents a new approach called the Force-Transfer algorithm that removes node overlaps. Compared to other methods, our algorithm is usually able to achieve a compact adjusted layout within a reasonable running time. "
}
@inproceedings{Li:2005:USA:1082315.1082334,
 author = {Li, Wanchun and Eades, Peter and Nikolov, Nikola},
 title = {Using Spring Algorithms to Remove Node Overlapping},
 booktitle = {Proceedings of the 2005 Asia-Pacific Symposium on Information Visualisation - Volume 45},
 series = {APVis '05},
 year = {2005},
 isbn = {1-920-68227-9},
 location = {Sydney, Australia},
 pages = {131--140},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=1082315.1082334},
 acmid = {1082334},
 publisher = {Australian Computer Society, Inc.},
 address = {Darlinghurst, Australia, Australia},
 keywords = {graph drawing, node overlapping, spring algorithm},
} 

@incollection{LayoutAdjustment,
year={1996},
isbn={978-3-540-60723-6},
booktitle={Graph Drawing},
volume={1027},
series={Lecture Notes in Computer Science},
editor={Brandenburg, FranzJ.},
doi={10.1007/BFb0021833},
title={Graph layout adjustment strategies},
url={http://dx.doi.org/10.1007/BFb0021833},
publisher={Springer Berlin Heidelberg},
author={Storey, Margaret-AnneD. and MÃ¼ller, HausiA.},
pages={487-499},
language={English}
link={http://link.springer.com/chapter/10.1007/BFb0021833}
}

@misc{gdea_3362,
          volume = {1984},
          author = {Aaron Quigley and Peter Eades},
            note = {10.1007/3-540-44541-2\_19},
          editor = {Joe Marks},
           title = {FADE: Graph Drawing, Clustering, and Visual Abstraction},
       publisher = {Springer Berlin / Heidelberg},
           pages = {197--210},
            year = {2001},
             url = {http://gdea.informatik.uni-koeln.de/362/},
        abstract = {A fast algorithm(FADE ) for the 2D drawing, geometric clustering and multilevel viewing of large undirected graphs is presented. The algorithm is an extension of the Barnes-Hut hierarchical space decomposition method, which includes edges and multilevel visual abstraction. Compared to the original force directed algorithm, the time overhead is \$O(e + n {$\backslash$}log n)\$ where n and e are the numbers of nodes and edges. The improvement is possible since the decomposition tree provides a systematic way to determine the degree of closeness between nodes without explicitly calculating the distance between each node. Different types of regular decomposition trees are introduced. The decomposition tree also represents a hierarchical clustering of the nodes, which improves in a graph theoretic sense as the graph drawing approaches a lower energy state. Finally, the decomposition tree provides a mechanism to view the hierarchical clustering on various levels of abstraction. Larger graphs can be represented more concisely, on a higher level of abstraction, with fewer graphics on screen.}
}
